# Problem parameters:
training:
    problem:
        name: &name SequentialPixelMNIST
        batch_size: &bs 64
        index: [0, 54999]
        use_train_data: True
        root_dir: '~/data/mnist'
    # optimizer parameters:
    optimizer:
        # Exact name of the pytorch optimizer function
        name: Adam
        # Function arguments of the optimizer, by name
        lr: 0.01
    terminal_conditions:
        loss_stop: 1.0e-5
        episode_limit: 50000

# Problem parameters:
testing:
    problem:
        name: *name
        batch_size: *bs
        use_train_data: False
        root_dir: '~/data/mnist'

# Problem parameters:
validation:
    problem:
        name: *name
        batch_size: *bs
        index: [55000, 59999]
        use_train_data: True
        root_dir: '~/data/mnist'

# Model parameters:
model:
    name: ThalNetModel
    # Controller parameters.
    context_input_size: 32
    input_size: 1  # row_size
    output_size: 10 # number of classes
    center_size_per_module: 32
    num_modules: 4
