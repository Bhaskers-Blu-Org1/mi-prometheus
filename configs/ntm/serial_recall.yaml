# Problem parameters:
training:
    problem:
        name: SerialRecallCommandLines
        # Size of generated input: [batch_size x sequence_length x number of command and data bits].
        batch_size: &bs 64
        # Parameters denoting min and max lengths.
        min_sequence_length: 2
        max_sequence_length: 20
        size: 32000 # i.e. every 500 episodes = 1 epoch

    #Curriculum learning - optional.
    curriculum_learning:
        initial_max_sequence_length: 5
        must_finish: false

    # Optional parameter, its presence results in clipping gradient to a range (-gradient_clipping, gradient_clipping)
    gradient_clipping: 10

    # Set optimizer.
    optimizer:
        name: Adam
        lr: 0.01

    # Terminal condition parameters:
    terminal_conditions:
        loss_stop: 1.0e-4
        episode_limit: 10000


# Problem parameters:
validation:
    problem:
        name: SerialRecallCommandLines
        # Size of generated input: [batch_size x sequence_length x number of control + data bits].
        batch_size: 64
        # Parameters denoting min and max lengths.
        min_sequence_length: 21
        max_sequence_length: 21


# Problem parameters:
testing:
    problem:
        name: SerialRecallCommandLines
        # Size of generated input: [batch_size x sequence_length x number of control + data bits].
        batch_size: 64
        # Parameters denoting min and max lengths.
        min_sequence_length: 100
        max_sequence_length: 100

# Model parameters:
model:
    name: NTM
    # Optional parameter: visualization.
    visualization_mode: 2
    # Controller parameters.
    controller:
        name: RNNController
        hidden_state_size: 20
        num_layers: 1
        non_linearity: sigmoid
    # Interface
    interface:
        num_read_heads: 1
        shift_size: 3
    # Memory parameters.
    memory:
        num_content_bits: 10
        num_addresses: -1
