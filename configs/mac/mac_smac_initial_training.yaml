# Lists of tasks that will be executed in parallel.
grid_tasks:
  -
    default_configs: configs/mac/mac_clevr.yaml  # MAC on CLEVR

    overwrite: # split original training set in 90% / 10%
      training:
        sampler:
          name: 'SubsetRandomSampler'
          indices: '~/data/CLEVR_v1.0/vigil_clevr_train_set_indices.txt'
      validation:
        problem:
          settings:
            set: 'train'
        sampler:
          name: 'SubsetRandomSampler'
          indices: '~/data/CLEVR_v1.0/vigil_clevr_val_set_indices.txt'
      testing:
        # specify the params combinations for 3 tests:
        # CoGenT-valA, CoGenT-valB
        multi_tests: {
                       data_folder: ['~/data/CLEVR_v1.0/','~/data/CLEVR_CoGenT_v1.0', '~/data/CLEVR_CoGenT_v1.0'],
                       dataset_variant: ['CLEVR', 'CLEVR-CoGenT', 'CLEVR-CoGenT'],
                       set: ['val','valA', 'valB']
        }
  - 
    default_configs: configs/mac/mac_cogent.yaml   # MAC on CoGenT

    overwrite: # split original training set in 90% / 10%
      training:
        sampler:
          name: 'SubsetRandomSampler'
          indices: '~/data/CLEVR_CoGenT_v1.0/vigil_cogent_train_set_indices.txt'
      validation:
        problem:
          settings:
            set: 'trainA'
        sampler:
          name: 'SubsetRandomSampler'
          indices: '~/data/CLEVR_CoGenT_v1.0/vigil_cogent_val_set_indices.txt'
      testing:
        # specify the params combinations for 2 tests:
        # CoGenT-valA, CoGenT-valB. Only 'set' changes.
        multi_tests: {set: ['valA', 'valB']}
  -
    default_configs: configs/mac/s_mac_clevr.yaml  # S-MAC on CLEVR

    overwrite: # split original training set in 90% / 10%
      training:
        sampler:
          name: 'SubsetRandomSampler'
          indices: '~/data/CLEVR_v1.0/vigil_clevr_train_set_indices.txt'
      validation:
        problem:
          settings:
            set: 'train'
        sampler:
          name: 'SubsetRandomSampler'
          indices: '~/data/CLEVR_v1.0/vigil_clevr_val_set_indices.txt'
      testing:
        # specify the params combinations for several tests:
        # CLEVR-val, CoGenT-valA, CoGenT-valB
        multi_tests: {
          data_folder: ['~/data/CLEVR_v1.0/','~/data/CLEVR_CoGenT_v1.0', '~/data/CLEVR_CoGenT_v1.0'],
          dataset_variant: ['CLEVR', 'CLEVR-CoGenT', 'CLEVR-CoGenT'],
          set: ['val','valA', 'valB']
        }
  -
    default_configs: configs/mac/s_mac_cogent.yaml  # S-MAC on CoGenT

    overwrite:
      training:
        sampler:
          name: 'SubsetRandomSampler'
          indices: '~/data/CLEVR_CoGenT_v1.0/vigil_cogent_train_set_indices.txt'
      validation:
        problem:
          settings:
            set: 'trainA'
        sampler:
          name: 'SubsetRandomSampler'
          indices: '~/data/CLEVR_CoGenT_v1.0/vigil_cogent_val_set_indices.txt'
      testing:
        # specify the params combinations for 2 tests:
        # CoGenT-valA, CoGenT-valB. Only 'set' changes.
        multi_tests: {set: ['valA', 'valB']}

# Parameters that will be overwritten for all tasks.
grid_overwrite:

  # Training configuration.
  training:
    #use_EMA: True  # EMA: keep track of exponential moving averages of the models weights.

    # fix the seeds
    seed_torch: 0
    seed_numpy: 0
  
grid_settings:
  # Set number of repetitions of each experiments.
  experiment_repetitions: 1
  # Set number of concurrent running experiments (will be limited by the actual number of available CPUs/GPUs).
  max_concurrent_runs: 7
  # Set trainer.
  trainer: mip-offline-trainer