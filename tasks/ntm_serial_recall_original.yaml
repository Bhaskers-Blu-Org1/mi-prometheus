# Problem parameters:
problem_train:
    name: serial_recall_original
    # Size of generated input: [batch_size x sequence_length x number of command and data bits].
    data_bits: &dbits 8
    control_bits: &cbits 2
    batch_size: &bs 10
    # Parameters denoting min and max lengths. 
    min_sequence_length: &min_seq_len 1
    max_sequence_length: &max_seq_len 10
    bias: 0.5
    cuda: True  # The presence of the 'cuda' key is optional

# Problem parameters:
problem_test:
    name: serial_recall_original
    # Size of generated input: [batch_size x sequence_length x number of control + data bits].
    control_bits: *cbits
    data_bits: *dbits
    batch_size: 1
    # Parameters denoting min and max lengths.
    min_sequence_length: 1
    max_sequence_length: 20
    bias: 0.5

# Problem parameters:
problem_validation:
    name: serial_recall_original
    # Size of generated input: [batch_size x sequence_length x number of control + data bits].
    control_bits: *cbits
    data_bits: *dbits
    batch_size: 10
    # Parameters denoting min and max lengths.
    min_sequence_length: 60
    max_sequence_length: 60
    bias: 0.5

# Model parameters:
model:
    name: ntm
    # Input bits = [command_bits, data_bits]
    # Output bits = [data_bits]
    num_control_bits: *cbits
    num_data_bits: *dbits
    # Controller parameters.
    ctrl_type: lstm
    ctrl_hidden_state_size: 10
    # Memory parameters.
    num_memory_bits: 8
    num_memory_addresses: 10

optimizer:
    name: RMSprop
    lr: 0.00003
    momentum: 0.9

# settings parameters
settings:
    # masked output and target
    use_mask: True
    length_loss: 100
    loss_stop: 0.0001
    max_episodes: 1000000
    seed_numpy: 0
    seed_torch: 2
